% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/create_agegroups.R
\name{create_agegroups}
\alias{create_agegroups}
\title{Create Age Groups from Numeric Values}
\usage{
create_agegroups(
  values,
  age_breaks = c(5, 10, 15, 20, 25, 30, 40, 50, 60, 70, 80, 90),
  breaks_as_lower_bound = TRUE,
  first_group_format = "0-{x}",
  interval_format = "{x}-{y}",
  last_group_format = "{x}+",
  pad_numbers = FALSE,
  pad_with = "0",
  collapse_single_year_groups = FALSE,
  na_label = NA,
  return_factor = FALSE
)
}
\arguments{
\item{values}{Numeric vector of ages to be grouped}

\item{age_breaks}{Numeric vector of break points for age groups.
Default: c(5, 10, 15, 20, 25, 30, 40, 50, 60, 70, 80, 90)}

\item{breaks_as_lower_bound}{Logical; if TRUE (default), breaks are treated as lower bounds of the intervals.
If FALSE, as upper bounds.}

\item{first_group_format}{Character string template for the first age group. Uses glue syntax. Default: "0-\{x\}"}

\item{interval_format}{Character string template for intermediate age groups. Uses glue syntax. Default: "\{x\}-\{y\}"}

\item{last_group_format}{Character string template for the last age group. Uses glue syntax. Default: "\{x\}+"}

\item{pad_numbers}{Logical or numeric; if numeric, pad numbers up to the specified length (Tip: use 2).
Not compatible with calculations within glue formats. Default: FALSE}

\item{pad_with}{Character to use for padding numbers. Default: "0"}

\item{collapse_single_year_groups}{Logical; if TRUE, groups spanning single years are collapsed. Default: FALSE}

\item{na_label}{Label for NA values. If NA, keeps default NA handling. Default: NA}

\item{return_factor}{Logical; if TRUE, returns a factor, if FALSE returns character vector. Default: FALSE}
}
\value{
Vector of age group labels (character or factor depending on return_factor)
}
\description{
Creates age groups from numeric values using customizable break points and formatting options.
The function allows for flexible formatting and customization of age group labels.
}
\examples{
# Basic usage
create_agegroups(1:100)

# Custom formatting with upper bounds
create_agegroups(1:100,
                 breaks_as_lower_bound = FALSE,
                 interval_format = "{x} to {y}",
                 first_group_format = "0 to {x}")

# Ages 1 to 5 are kept as numbers by collapsing single year groups
create_agegroups(1:10,
                 age_breaks = c(1,2,3,4,5,10),
                 collapse_single_year_groups = TRUE)

}
