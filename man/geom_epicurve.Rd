% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/geom_epicurve.R
\name{geom_epicurve}
\alias{geom_epicurve}
\title{Create an epidemic curve plot}
\usage{
geom_epicurve(
  mapping = NULL,
  data = NULL,
  stat = "epicurve",
  position = "stack",
  date_resolution = NULL,
  width = NULL,
  relative.width = 1,
  week_start = getOption("lubridate.week.start", 1),
  ...,
  na.rm = FALSE,
  show.legend = NA,
  inherit.aes = TRUE
)
}
\arguments{
\item{mapping}{Set of aesthetic mappings created by \code{\link[ggplot2]{aes}}. Commonly used mappings:
\itemize{
\item \strong{x or y}: date or datetime. Numeric is technically supported.
\item \strong{fill}: for colouring groups
\item \strong{weight}: if data is already aggregated (e.g. case counts)
}}

\item{data}{The data frame containing the variables for the plot}

\item{stat}{either "\code{epicurve}" for outlines around cases or "\code{count}" for outlines around (fill) groups.
For large numbers of cases please use "\code{count}".}

\item{position}{Position adjustment. Currently supports "\code{stack}".}

\item{date_resolution}{Character string specifying the time unit for date aggregation.
Set to \code{NULL} for no date aggregation \cr
Possible values are: "\code{day}", "\code{week}", "\code{month}", "\code{bimonth}", "\code{season}", "\code{quarter}", "\code{halfyear}", "\code{year}".}

\item{width}{Numeric value specifying the width of the bars. If \code{NULL}, calculated
based on resolution and relative.width}

\item{relative.width}{Numeric value between 0 and 1 adjusting the relative width
of bars. Defaults to 1}

\item{week_start}{Integer specifying the start of the week (1 = Monday, 7 = Sunday). \cr
Only used when date_resolution includes weeks. Defaults to 1 (Monday). \cr
For isoweek use \code{week_start = 1} and for epiweek use \code{week_start = 7}.}

\item{...}{Other arguments passed to \code{\link[ggplot2]{layer}}. For example:
\itemize{
\item \code{colour} Colour of the outlines around cases. Disable with colour = NA. Defaults to "white".
\item \code{linewidth}  Width of the case outlines.
}}

\item{na.rm}{If \code{FALSE}, the default, missing values are removed with
a warning. If \code{TRUE}, missing values are silently removed.}

\item{show.legend}{logical. Should this layer be included in the legends?
\code{NA}, the default, includes if any aesthetics are mapped.
\code{FALSE} never includes, and \code{TRUE} always includes.
It can also be a named logical vector to finely select the aesthetics to
display.}

\item{inherit.aes}{If \code{FALSE}, overrides the default aesthetics,
rather than combining with them. This is most useful for helper functions
that define both data and aesthetics and shouldn't inherit behaviour from
the default plot specification, e.g. \code{\link[ggplot2:borders]{borders()}}.}
}
\value{
A ggplot2 layer that can be added to a plot
}
\description{
Creates a epicurve plot for visualizing epidemic case counts in outbreaks (epidemiological curves).
An epicurve is a bar plot, where every case is outlined. \code{geom_epicurve} additionally provides
date-based aggregation of cases (e.g. per week or month and many more).
For week aggregation both isoweek (World + ECDC) and epiweek (US CDC) are supported.
}
\examples{
# Basic epicurve with dates
library(ggplot2)
set.seed(1)

plot_data_epicurve_imp <- data.frame(
  date = rep(as.Date("2023-12-01") + ((0:300) * 1), times = rpois(301, 0.5))
)

ggplot(plot_data_epicurve_imp, aes(x = date, weight = 2)) +
  geom_vline_year(year_break = "01-01", show.legend = TRUE) +
  geom_epicurve(date_resolution = "week") +
  labs(title = "Epicurve Example") +
  scale_y_cases_5er() +
  scale_x_date(date_breaks = "4 weeks", date_labels = "W\%V'\%g") + # Correct ISOWeek labels week'year
  theme_bw()

# Categorical epicurve
library(tidyr)
library(outbreaks)

sars_canada_2003 |> # SARS dataset from outbreaks
  pivot_longer(starts_with("cases"), names_prefix = "cases_", names_to = "origin") |>
  ggplot(aes(x = date, weight = value, fill = origin)) +
  geom_epicurve(date_resolution = "week") +
  scale_x_date(date_labels = "W\%V'\%g", date_breaks = "2 weeks") +
  scale_y_cases_5er() +
  theme_classic()
}
\seealso{
\code{\link[=scale_y_cases_5er]{scale_y_cases_5er()}}
}
